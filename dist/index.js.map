{"version":3,"file":null,"sources":["../server-config.js","../server/session-store.js","../server/auth.js","../server/geoserver-gateway.js","../server/api-gateway.js","../server/index.js"],"sourcesContent":["export default {\n\tports: {\n\t\thttp: 3000,\n\t\tio: 8090\n\t}\n}\n","import debug from 'debug'\nimport crypto from 'crypto'\nimport Blowfish from 'xs-blowfish'\nimport pkg from '../package.json'\n\nconst message = debug('sessions')\nconst DEFAULT_EXPIRATION = 86400000\nconst HASH_SECRET = 'spa-app v' + pkg.version\nconst hmac = crypto.createHmac('sha256', HASH_SECRET)\nconst bf = new Blowfish(HASH_SECRET)\n\n// extend Date with .add(ms) functionality\nDate.prototype.add = function(ms) {\n  this.setTime(this.getTime() + ms)\n  return this\n}\n\nDate.prototype.toUTC = function() {\n  return Date.UTC(\n    this.getUTCFullYear(),\n    this.getUTCMonth(),\n    this.getUTCDate(),\n    this.getUTCHours(),\n    this.getUTCMinutes(),\n    this.getUTCSeconds(),\n    this.getUTCMilliseconds(),\n  )\n}\n\n// global sessions object\nlet sessions = {}\n\nfunction timeoutSession(sessionid, duration) {\n  return setTimeout(() => {\n    let session = sessions[sessionid]\n\n    if (session) {\n      message(`user session for ${session.user.name} expired`)\n      delete sessions[sessionid]\n    }\n  }, duration)\n}\n\nfunction clearSessions(user) {\n  Object.keys(sessions).forEach(sessionid => {\n    let session = sessions[sessionid]\n    if (session.user.id === user.id) {\n      clearTimeout(session.timeout)\n      delete sessions[sessionid]\n    }\n  })\n}\n\nfunction createSession(user, token) {\n  let session = {\n    user,\n    expires: (new Date()).add(DEFAULT_EXPIRATION),\n  }\n\n  token.expires = (new Date()).add(DEFAULT_EXPIRATION)\n  user.token = bf.encrypt(JSON.stringify(token))\n\n  let sessionid = user.sessionid = crypto\n                                    .createHmac('sha256', HASH_SECRET)\n                                    .update(JSON.stringify(user))\n                                    .digest('hex')\n\n  session.timeout = timeoutSession(sessionid, DEFAULT_EXPIRATION)\n\n  // clear existing sessions for user\n  clearSessions(user)\n\n  // store new session\n  sessions[sessionid] = session\n\n  message(`creating user session for ${user.name} with sessionid ${sessionid}`)\n\n  return user\n}\n\nfunction listSessions() {\n  return Object.keys(sessions).map(sessionid => sessions[sessionid].user)\n}\n\nfunction autoRefreshSession(req, res, next) {\n  let user = req.session && req.session.user\n\n  user && refreshSession(user.sessionid)\n\n  next()\n}\n\nfunction refreshSession(sessionid) {\n  let storedSession = sessions[sessionid]\n\n  if (storedSession) {\n    message(`refreshing user session for ${storedSession.user.name}...`)\n    clearTimeout(storedSession.timeout)\n    Object.assign(storedSession, {\n      expires: (new Date()).add(DEFAULT_EXPIRATION),\n      timeout: timeoutSession(sessionid, DEFAULT_EXPIRATION)\n    })\n  }\n}\n\nfunction resumeSession(sessionid) {\n  let storedSession = sessions[sessionid]\n\n  if (storedSession) {\n    let user = storedSession.user\n\n    message(`resuming user session for ${user.name}`)\n    refreshSession(sessionid)\n\n    return user\n  }\n\n  return false\n}\n\nexport { autoRefreshSession, createSession, refreshSession, resumeSession, listSessions }\n","import express from 'express'\nimport oktaNode  from 'okta-node'\nimport request from 'request'\nimport { createSession, resumeSession, listSessions } from './session-store'\nimport Blowfish from 'xs-blowfish'\nimport pkg from '../package.json'\n\nconst app = express()\n\n// OKTA & BLOWFISH TOKEN ENCRYPTION\nconst HASH_SECRET = 'spa-app v' + pkg.version\nconst okta = new oktaNode('006L8Mwg_HYBzbzzktxD_68y8mC7zn3j_Fy35oxiYX', 'dev-301374', true)\nconst bf = new Blowfish(HASH_SECRET)\n\n// API CALLS WILL BE ROUTED THROUGH THIS HOST DOMAIN\nconst API_HOST = 'http://spa-api-demo.us-west-1.qri.local';\nconst API_PATH = '/api/v2/';\n\n// MESSAGING CONSTANTS\nconst messages = {\n  AUTH_FAILURE:   'Authentication failure.',\n  NOT_LOGGED_IN:  'User not logged in.',\n  LOGOUT_SUCCESS: 'User logged out successfully.',\n  REQUIRES_LOGIN: 'This route requires user login.',\n}\n\napp.isEnabled = true\n\n// EXPOSED MIDDLEWARE: API calls should require authentication\napp.isAuthenticated = function(req, res, next) {\n  if (!app.isEnabled) return next() // REMOVE*** authentication bypass\n  let { session } = req\n  let { user } = session || {}\n  if (!user || !user.id) {\n    return res.status(403).json({ success: false, error: messages.REQUIRES_LOGIN })\n  }\n  next()\n}\n\n// REUSABLE AUTHENTICATION RESPONSE\nfunction authenticationFailure(res) {\n  return res.status(401).json({ status: 401, success: false, message: messages.AUTH_FAILURE })\n}\n\napp.get('/auth/sessions', (req, res) => {\n  res.json(listSessions())\n})\n\n// RETURN LOGGED IN USER\napp.get('/auth/user', (req, res) => {\n  let { user } = req.session\n  if (!user) {\n    return res.status(404).json({ success: false, status: 404, message: messages.NOT_LOGGED_IN })\n  }\n  return res.json(user)\n})\n\n// LOGS OUT CURRENT USER\napp.get('/auth/logout', (req, res) => {\n  let { session } = req\n  let { user } = session\n  if (!user) {\n    return res.status(500).json({ message: messages.NOT_LOGGED_IN })\n  }\n  delete session.user\n  res.json({ message: messages.LOGOUT_SUCCESS })\n})\n\n// AUTHENTICATE USER\napp.use('/auth', (req, res) => {\n  let { userid, userpwd, sessionid, token } = req.body\n\n  // REMOVE THIS BLOCK IN PRODUCTION\n  if (!userid && !sessionid) {\n    userid = req.query.userid\n    userpwd = req.query.userpwd\n    sessionid = req.query.sessionid\n    token = req.query.token\n  }\n\n  let resumedSession = resumeSession(sessionid)\n\n  if (resumedSession) {\n    return res.json(resumedSession)\n  }\n\n  if (!userid || !userpwd) {\n\n    if (token) {\n      try {\n        token = bf.decrypt(token)\n        token = JSON.parse(token)\n        userid = token.userid\n        userpwd = token.userpwd\n        if (new Date(token.expires) < new Date) {\n          return res.status(401).json({ status: 401, success: false, error: 'Attempted relogin using expired token' })\n        }\n      } catch(err) {\n        console.log(err.message)\n        return res.status(401).json({ status: 401, success: false, error: 'Attempted relogin using invalid token' })\n      }\n    }\n  }\n\n  if (!userid || !userpwd) {\n    return authenticationFailure(res)\n  }\n\n  try {\n    okta.sessions.create(userid, userpwd, null, session => {\n      let { resp } = session\n      if (!session.success || resp.status !== 'ACTIVE') {\n        return authenticationFailure(res)\n      }\n\n      okta.users.get(resp.userId, userData => {\n\n        let user = {\n          id: resp.login,\n          name: resp._links.user.name,\n          profile: userData.resp.rofile\n        }\n\n        request(API_HOST + API_PATH + 'access/' + (userData.resp.profile.ACL || 'none'), (err, response, body) => {\n          if (err) {\n            user.portfolios = []\n          } else {\n            try {\n              user.portfolios = JSON.parse(body).portfolios\n            } catch (err) {\n              return res.status(500).json({ success: false, error: err.message, body })\n            }\n          }\n\n          req.session.user = createSession(user, { userid, userpwd })\n          req.session.save()\n\n          res.json(user)\n        })\n      })\n    })\n  } catch (err) {\n    return authenticationFailure(res)\n  }\n})\n\nexport default app\n","import express from 'express'\nimport apicache from 'apicache'\nimport auth from './auth'\nimport request from 'request'\n\nconst app = express()\n\n// API CALLS WILL BE ROUTED THROUGH THIS HOST DOMAIN\nconst API_HOST = 'http://spa-api-demo.us-west-1.qri.local'\nconst API_PATH = '/geoserver'\n\n// ENABLE CACHING\nlet cache = apicache.options({ statusCodes: { include: [200] } }).middleware;\n\n// GENERIC EXTERNAL API REQUEST+RESPONSE\nfunction getFromAPI(path, res) {\n  request(path, (err, response, body) => {\n    if (err) {\n      return res.status(500).json({ status: 500, message: err })\n    }\n\n    try {\n      body = JSON.parse(body)\n      return res.json(body)\n    } catch(err) {\n      return res.status(500).json({ success: false, error: err.message })\n    }\n  })\n}\n\n// NEW shorthand ... syntax\napp.get('*', auth.isAuthenticated, cache('1 day'), (req, res) => {\n  let url = API_HOST + API_PATH + req.url.replace(/^\\//,'')\n  getFromAPI(url, res)\n})\n\nexport default app\n","import express from 'express'\nimport apicache from 'apicache'\nimport auth from './auth'\nimport request from 'request'\n\nconst app = express()\n\n// API CALLS WILL BE ROUTED THROUGH THIS HOST DOMAIN\nconst API_HOST = 'http://spa-api-demo.us-west-1.qri.local'\nconst API_PATH = '/api/v2/';\n\n// ENABLE CACHING\nlet cache = apicache.options({ statusCodes: { include: [200] } }).middleware;\n\n// GENERIC EXTERNAL API REQUEST+RESPONSE\nfunction getFromAPI(path, callback) {\n  request(path, (err, response, body) => {\n    if (err) {\n      return callback(err)\n    }\n\n    try {\n      body = JSON.parse(body)\n    } catch(err) {\n      return callback({ error: err.message, body })\n    }\n\n    return callback(err, body)\n  });\n}\n\nfunction isNotPortfoliosRequest(req) {\n  return req.path.replace(/\\/$/,'') !== '/portfolios'\n}\n\n// ENABLE CACHE INDEX\napp.get('cache/index', auth.isAuthenticated, function(req, res) {\n  return res.send(apicache.getIndex());\n});\n\n// NEW shorthand ... syntax\napp.get('*', auth.isAuthenticated, cache('1 day', isNotPortfoliosRequest), (req, res) => {\n  let url = API_HOST + API_PATH + req.url.replace(/^\\//,'');\n  getFromAPI(url, (err, data) => {\n    if (err) {\n      return res.status(500).json({ success: false, err })\n    }\n\n    // if IS /portfolios request\n    if (!isNotPortfoliosRequest(req) && auth.isEnabled) {\n      let authorizedPortfolios = req.session.user.portfolios.map(p => p.pUID)\n\n      data = data.filter(p => authorizedPortfolios.indexOf(p.id) !== -1)\n    }\n\n    res.json(data)\n  })\n})\n\nexport default app\n","import express from 'express'\nimport morgan from 'morgan'\nimport path from 'path'\nimport session from 'express-session'\nimport config from '../server-config'\nimport bodyParser from 'body-parser'\nimport { autoRefreshSession } from './session-store'\nimport pkg from '../package.json'\n\n// CONFIG & ENVIRONMENT\nconst env = process.env.NODE_ENV || 'dev'\nconst isProduction = env === 'production'\n\n// INITIALIZE APP SERVER\nconsole.log(`initializing SPA server in ${env} mode...`)\nvar app = express()\n\n// HOT RELOADING - UNSTABLE\n// import webpack from 'webpack'\n// import webpackConfig from '../webpack.config'\n// var compiler = webpack(webpackConfig)\n\n// if (!isProduction) {\n//   app.use(require(\"webpack-dev-middleware\")(compiler, {\n//     noInfo: true, publicPath: webpackConfig.output.publicPath\n//   }));\n\n//   app.use(require(\"webpack-hot-middleware\")(compiler));\n// }\n\n\n// ENABLE USER SESSIONS\napp.use(session({\n  name: 'server-session-cookie-id',\n  secret: 'kitty cat of kittens',\n  saveUninitialized: true,\n  resave: true\n}))\n\n// ENABLED FORM BODY PARSING\napp.use(bodyParser.json())       // to support JSON-encoded bodies\napp.use(bodyParser.urlencoded({  // to support URL-encoded bodies\n  extended: true\n}));\n\n// ENABLE OUTPUT LOGGING\napp.use(morgan('dev'))\n\n// ENABLE SESSION REFRESHING ON REQUEST\napp.use(autoRefreshSession)\n\n// ENABLE STATIC CONTENT DELIVERY\napp.use(express.static(path.join(__dirname, (!isProduction ? '../dist/client' : '/client'))))\n\n// ENABLE AUTHENTICATION\nimport auth from './auth'\napp.use(auth)\n\n// ENABLE GEOSERVER GATEWAY\nimport geoserverGateway from './geoserver-gateway'\napp.use('/api/geoserver', geoserverGateway)\n\n// ENABLE GENERIC API GATEWAY\nimport apiGateway from './api-gateway'\napp.use('/api', apiGateway)\n\n// VERSION & PACKAGE CHECKING\napp.get('/version', (req, res) => {\n  let { name, version, description } = pkg\n  res.json({ name, description, version, deployed: new Date })\n})\n\n// CREATE HTTP SERVER\nvar httpServer = app.listen(config.ports.http, function() {\n  console.log(`HTTP server listening on port ${httpServer.address().port}`)\n})\n"],"names":["message","debug","DEFAULT_EXPIRATION","HASH_SECRET","pkg","version","hmac","crypto","createHmac","bf","Blowfish","Date","prototype","add","ms","setTime","getTime","toUTC","UTC","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","sessions","timeoutSession","sessionid","duration","setTimeout","session","user","name","clearSessions","keys","forEach","id","timeout","createSession","token","expires","encrypt","JSON","stringify","update","digest","listSessions","Object","map","autoRefreshSession","req","res","next","refreshSession","storedSession","assign","resumeSession","app","express","okta","oktaNode","API_HOST","API_PATH","messages","isEnabled","isAuthenticated","status","json","success","error","REQUIRES_LOGIN","authenticationFailure","AUTH_FAILURE","get","NOT_LOGGED_IN","LOGOUT_SUCCESS","use","body","userid","userpwd","query","resumedSession","decrypt","parse","err","log","create","resp","users","userId","login","_links","userData","rofile","profile","ACL","response","portfolios","save","cache","apicache","options","statusCodes","include","middleware","getFromAPI","path","auth","url","replace","callback","isNotPortfoliosRequest","send","getIndex","data","authorizedPortfolios","p","pUID","filter","indexOf","env","process","isProduction","console","bodyParser","urlencoded","morgan","static","join","__dirname","geoserverGateway","apiGateway","description","deployed","httpServer","listen","config","ports","http","address","port"],"mappings":";;;;;;;;;;;;;;;;AAAA,aAAe;QACP;QACA,IADA;MAEF;;CAHN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKA,IAAMA,UAAUC,MAAM,UAAN,CAAhB;AACA,IAAMC,qBAAqB,QAA3B;AACA,IAAMC,cAAc,cAAcC,IAAIC,OAAtC;AACA,IAAMC,OAAOC,OAAOC,UAAP,CAAkB,QAAlB,EAA4BL,WAA5B,CAAb;AACA,IAAMM,KAAK,IAAIC,QAAJ,CAAaP,WAAb,CAAX;;;AAGAQ,KAAKC,SAAL,CAAeC,GAAf,GAAqB,UAASC,EAAT,EAAa;OAC3BC,OAAL,CAAa,KAAKC,OAAL,KAAiBF,EAA9B;SACO,IAAP;CAFF;;AAKAH,KAAKC,SAAL,CAAeK,KAAf,GAAuB,YAAW;SACzBN,KAAKO,GAAL,CACL,KAAKC,cAAL,EADK,EAEL,KAAKC,WAAL,EAFK,EAGL,KAAKC,UAAL,EAHK,EAIL,KAAKC,WAAL,EAJK,EAKL,KAAKC,aAAL,EALK,EAML,KAAKC,aAAL,EANK,EAOL,KAAKC,kBAAL,EAPK,CAAP;CADF;;;AAaA,IAAIC,WAAW,EAAf;;AAEA,SAASC,cAAT,CAAwBC,SAAxB,EAAmCC,QAAnC,EAA6C;SACpCC,WAAW,YAAM;QAClBC,aAAUL,SAASE,SAAT,CAAd;;QAEIG,UAAJ,EAAa;oCACiBA,WAAQC,IAAR,CAAaC,IAAzC;aACOP,SAASE,SAAT,CAAP;;GALG,EAOJC,QAPI,CAAP;;;AAUF,SAASK,aAAT,CAAuBF,IAAvB,EAA6B;SACpBG,IAAP,CAAYT,QAAZ,EAAsBU,OAAtB,CAA8B,qBAAa;QACrCL,aAAUL,SAASE,SAAT,CAAd;QACIG,WAAQC,IAAR,CAAaK,EAAb,KAAoBL,KAAKK,EAA7B,EAAiC;mBAClBN,WAAQO,OAArB;aACOZ,SAASE,SAAT,CAAP;;GAJJ;;;AASF,SAASW,aAAT,CAAuBP,IAAvB,EAA6BQ,KAA7B,EAAoC;MAC9BT,aAAU;cAAA;aAEF,IAAIpB,IAAJ,EAAD,CAAaE,GAAb,CAAiBX,kBAAjB;GAFX;;QAKMuC,OAAN,GAAiB,IAAI9B,IAAJ,EAAD,CAAaE,GAAb,CAAiBX,kBAAjB,CAAhB;OACKsC,KAAL,GAAa/B,GAAGiC,OAAH,CAAWC,KAAKC,SAAL,CAAeJ,KAAf,CAAX,CAAb;;MAEIZ,YAAYI,KAAKJ,SAAL,GAAiBrB,OACEC,UADF,CACa,QADb,EACuBL,WADvB,EAEE0C,MAFF,CAESF,KAAKC,SAAL,CAAeZ,IAAf,CAFT,EAGEc,MAHF,CAGS,KAHT,CAAjC;;aAKQR,OAAR,GAAkBX,eAAeC,SAAf,EAA0B1B,kBAA1B,CAAlB;;;gBAGc8B,IAAd;;;WAGSJ,SAAT,IAAsBG,UAAtB;;yCAEqCC,KAAKC,IAA1C,wBAAiEL,SAAjE;;SAEOI,IAAP;;;AAGF,SAASe,YAAT,GAAwB;SACfC,OAAOb,IAAP,CAAYT,QAAZ,EAAsBuB,GAAtB,CAA0B;WAAavB,SAASE,SAAT,EAAoBI,IAAjC;GAA1B,CAAP;;;AAGF,SAASkB,kBAAT,CAA4BC,GAA5B,EAAiCC,GAAjC,EAAsCC,IAAtC,EAA4C;MACtCrB,OAAOmB,IAAIpB,OAAJ,IAAeoB,IAAIpB,OAAJ,CAAYC,IAAtC;;UAEQsB,eAAetB,KAAKJ,SAApB,CAAR;;;;;AAKF,SAAS0B,cAAT,CAAwB1B,SAAxB,EAAmC;MAC7B2B,gBAAgB7B,SAASE,SAAT,CAApB;;MAEI2B,aAAJ,EAAmB;6CACsBA,cAAcvB,IAAd,CAAmBC,IAA1D;iBACasB,cAAcjB,OAA3B;WACOkB,MAAP,CAAcD,aAAd,EAA6B;eACjB,IAAI5C,IAAJ,EAAD,CAAaE,GAAb,CAAiBX,kBAAjB,CADkB;eAElByB,eAAeC,SAAf,EAA0B1B,kBAA1B;KAFX;;;;AAOJ,SAASuD,aAAT,CAAuB7B,SAAvB,EAAkC;MAC5B2B,gBAAgB7B,SAASE,SAAT,CAApB;;MAEI2B,aAAJ,EAAmB;QACbvB,OAAOuB,cAAcvB,IAAzB;;2CAEqCA,KAAKC,IAA1C;mBACeL,SAAf;;WAEOI,IAAP;;;SAGK,KAAP;CAGF;;ACjHA,IAAM0B,QAAMC,SAAZ;;;AAGA,IAAMxD,gBAAc,cAAcC,IAAIC,OAAtC;AACA,IAAMuD,OAAO,IAAIC,QAAJ,CAAa,4CAAb,EAA2D,YAA3D,EAAyE,IAAzE,CAAb;AACA,IAAMpD,OAAK,IAAIC,QAAJ,CAAaP,aAAb,CAAX;;;AAGA,IAAM2D,WAAW,yCAAjB;AACA,IAAMC,WAAW,UAAjB;;;AAGA,IAAMC,WAAW;gBACC,yBADD;iBAEC,qBAFD;kBAGC,+BAHD;kBAIC;CAJlB;;AAOAN,MAAIO,SAAJ,GAAgB,IAAhB;;;AAGAP,MAAIQ,eAAJ,GAAsB,UAASf,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;MACzC,CAACK,MAAIO,SAAT,EAAoB,OAAOZ,MAAP,CADyB;MAEvCtB,UAFuC,GAE3BoB,GAF2B,CAEvCpB,OAFuC;;aAG9BA,cAAW,EAHmB;MAGvCC,IAHuC,QAGvCA,IAHuC;;MAIzC,CAACA,IAAD,IAAS,CAACA,KAAKK,EAAnB,EAAuB;WACde,IAAIe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,KAAX,EAAkBC,OAAON,SAASO,cAAlC,EAArB,CAAP;;;CALJ;;;AAWA,SAASC,qBAAT,CAA+BpB,GAA/B,EAAoC;SAC3BA,IAAIe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAED,QAAQ,GAAV,EAAeE,SAAS,KAAxB,EAA+BrE,SAASgE,SAASS,YAAjD,EAArB,CAAP;;;AAGFf,MAAIgB,GAAJ,CAAQ,gBAAR,EAA0B,UAACvB,GAAD,EAAMC,GAAN,EAAc;MAClCgB,IAAJ,CAASrB,cAAT;CADF;;;AAKAW,MAAIgB,GAAJ,CAAQ,YAAR,EAAsB,UAACvB,GAAD,EAAMC,GAAN,EAAc;MAC5BpB,IAD4B,GACnBmB,IAAIpB,OADe,CAC5BC,IAD4B;;MAE9B,CAACA,IAAL,EAAW;WACFoB,IAAIe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,KAAX,EAAkBF,QAAQ,GAA1B,EAA+BnE,SAASgE,SAASW,aAAjD,EAArB,CAAP;;SAEKvB,IAAIgB,IAAJ,CAASpC,IAAT,CAAP;CALF;;;AASA0B,MAAIgB,GAAJ,CAAQ,cAAR,EAAwB,UAACvB,GAAD,EAAMC,GAAN,EAAc;MAC9BrB,UAD8B,GAClBoB,GADkB,CAC9BpB,OAD8B;MAE9BC,IAF8B,GAErBD,UAFqB,CAE9BC,IAF8B;;MAGhC,CAACA,IAAL,EAAW;WACFoB,IAAIe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEpE,SAASgE,SAASW,aAApB,EAArB,CAAP;;SAEK5C,WAAQC,IAAf;MACIoC,IAAJ,CAAS,EAAEpE,SAASgE,SAASY,cAApB,EAAT;CAPF;;;AAWAlB,MAAImB,GAAJ,CAAQ,OAAR,EAAiB,UAAC1B,GAAD,EAAMC,GAAN,EAAc;kBACeD,IAAI2B,IADnB;MACvBC,MADuB,aACvBA,MADuB;MACfC,OADe,aACfA,OADe;MACNpD,SADM,aACNA,SADM;MACKY,KADL,aACKA,KADL;;;;MAIzB,CAACuC,MAAD,IAAW,CAACnD,SAAhB,EAA2B;aAChBuB,IAAI8B,KAAJ,CAAUF,MAAnB;cACU5B,IAAI8B,KAAJ,CAAUD,OAApB;gBACY7B,IAAI8B,KAAJ,CAAUrD,SAAtB;YACQuB,IAAI8B,KAAJ,CAAUzC,KAAlB;;;MAGE0C,iBAAiBzB,cAAc7B,SAAd,CAArB;;MAEIsD,cAAJ,EAAoB;WACX9B,IAAIgB,IAAJ,CAASc,cAAT,CAAP;;;MAGE,CAACH,MAAD,IAAW,CAACC,OAAhB,EAAyB;;QAEnBxC,KAAJ,EAAW;UACL;gBACM/B,KAAG0E,OAAH,CAAW3C,KAAX,CAAR;gBACQG,KAAKyC,KAAL,CAAW5C,KAAX,CAAR;iBACSA,MAAMuC,MAAf;kBACUvC,MAAMwC,OAAhB;YACI,IAAIrE,IAAJ,CAAS6B,MAAMC,OAAf,IAA0B,IAAI9B,IAAJ,EAA9B,EAAwC;iBAC/ByC,IAAIe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAED,QAAQ,GAAV,EAAeE,SAAS,KAAxB,EAA+BC,OAAO,uCAAtC,EAArB,CAAP;;OANJ,CAQE,OAAMe,GAAN,EAAW;gBACHC,GAAR,CAAYD,IAAIrF,OAAhB;eACOoD,IAAIe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAED,QAAQ,GAAV,EAAeE,SAAS,KAAxB,EAA+BC,OAAO,uCAAtC,EAArB,CAAP;;;;;MAKF,CAACS,MAAD,IAAW,CAACC,OAAhB,EAAyB;WAChBR,sBAAsBpB,GAAtB,CAAP;;;MAGE;SACG1B,QAAL,CAAc6D,MAAd,CAAqBR,MAArB,EAA6BC,OAA7B,EAAsC,IAAtC,EAA4C,sBAAW;UAC/CQ,IAD+C,GACtCzD,UADsC,CAC/CyD,IAD+C;;UAEjD,CAACzD,WAAQsC,OAAT,IAAoBmB,KAAKrB,MAAL,KAAgB,QAAxC,EAAkD;eACzCK,sBAAsBpB,GAAtB,CAAP;;;WAGGqC,KAAL,CAAWf,GAAX,CAAec,KAAKE,MAApB,EAA4B,oBAAY;;YAElC1D,OAAO;cACLwD,KAAKG,KADA;gBAEHH,KAAKI,MAAL,CAAY5D,IAAZ,CAAiBC,IAFd;mBAGA4D,SAASL,IAAT,CAAcM;SAHzB;;gBAMQhC,WAAWC,QAAX,GAAsB,SAAtB,IAAmC8B,SAASL,IAAT,CAAcO,OAAd,CAAsBC,GAAtB,IAA6B,MAAhE,CAAR,EAAiF,UAACX,GAAD,EAAMY,QAAN,EAAgBnB,IAAhB,EAAyB;cACpGO,GAAJ,EAAS;iBACFa,UAAL,GAAkB,EAAlB;WADF,MAEO;gBACD;mBACGA,UAAL,GAAkBvD,KAAKyC,KAAL,CAAWN,IAAX,EAAiBoB,UAAnC;aADF,CAEE,OAAOb,GAAP,EAAY;qBACLjC,IAAIe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,KAAX,EAAkBC,OAAOe,IAAIrF,OAA7B,EAAsC8E,UAAtC,EAArB,CAAP;;;;cAIA/C,OAAJ,CAAYC,IAAZ,GAAmBO,cAAcP,IAAd,EAAoB,EAAE+C,cAAF,EAAUC,gBAAV,EAApB,CAAnB;cACIjD,OAAJ,CAAYoE,IAAZ;;cAEI/B,IAAJ,CAASpC,IAAT;SAdF;OARF;KANF;GADF,CAiCE,OAAOqD,GAAP,EAAY;WACLb,sBAAsBpB,GAAtB,CAAP;;CAzEJ,EA6EA;;AC7IA,IAAMM,QAAMC,SAAZ;;;AAGA,IAAMG,aAAW,yCAAjB;AACA,IAAMC,aAAW,YAAjB;;;AAGA,IAAIqC,QAAQC,SAASC,OAAT,CAAiB,EAAEC,aAAa,EAAEC,SAAS,CAAC,GAAD,CAAX,EAAf,EAAjB,EAAsDC,UAAlE;;;AAGA,SAASC,UAAT,CAAoBC,OAApB,EAA0BvD,GAA1B,EAA+B;UACrBuD,OAAR,EAAc,UAACtB,GAAD,EAAMY,QAAN,EAAgBnB,IAAhB,EAAyB;QACjCO,GAAJ,EAAS;aACAjC,IAAIe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAED,QAAQ,GAAV,EAAenE,SAASqF,GAAxB,EAArB,CAAP;;;QAGE;aACK1C,KAAKyC,KAAL,CAAWN,IAAX,CAAP;aACO1B,IAAIgB,IAAJ,CAASU,IAAT,CAAP;KAFF,CAGE,OAAMO,GAAN,EAAW;aACJjC,IAAIe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,KAAX,EAAkBC,OAAOe,IAAIrF,OAA7B,EAArB,CAAP;;GATJ;;;;AAeF0D,MAAIgB,GAAJ,CAAQ,GAAR,EAAakC,MAAK1C,eAAlB,EAAmCkC,MAAM,OAAN,CAAnC,EAAmD,UAACjD,GAAD,EAAMC,GAAN,EAAc;MAC3DyD,MAAM/C,aAAWC,UAAX,GAAsBZ,IAAI0D,GAAJ,CAAQC,OAAR,CAAgB,KAAhB,EAAsB,EAAtB,CAAhC;aACWD,GAAX,EAAgBzD,GAAhB;CAFF,EAKA;;AC/BA,IAAMM,QAAMC,SAAZ;;;AAGA,IAAMG,aAAW,yCAAjB;AACA,IAAMC,aAAW,UAAjB;;;AAGA,IAAIqC,UAAQC,SAASC,OAAT,CAAiB,EAAEC,aAAa,EAAEC,SAAS,CAAC,GAAD,CAAX,EAAf,EAAjB,EAAsDC,UAAlE;;;AAGA,SAASC,YAAT,CAAoBC,OAApB,EAA0BI,QAA1B,EAAoC;UAC1BJ,OAAR,EAAc,UAACtB,GAAD,EAAMY,QAAN,EAAgBnB,IAAhB,EAAyB;QACjCO,GAAJ,EAAS;aACA0B,SAAS1B,GAAT,CAAP;;;QAGE;aACK1C,KAAKyC,KAAL,CAAWN,IAAX,CAAP;KADF,CAEE,OAAMO,GAAN,EAAW;aACJ0B,SAAS,EAAEzC,OAAOe,IAAIrF,OAAb,EAAsB8E,UAAtB,EAAT,CAAP;;;WAGKiC,SAAS1B,GAAT,EAAcP,IAAd,CAAP;GAXF;;;AAeF,SAASkC,sBAAT,CAAgC7D,GAAhC,EAAqC;SAC5BA,IAAIwD,IAAJ,CAASG,OAAT,CAAiB,KAAjB,EAAuB,EAAvB,MAA+B,aAAtC;;;;AAIFpD,MAAIgB,GAAJ,CAAQ,aAAR,EAAuBkC,MAAK1C,eAA5B,EAA6C,UAASf,GAAT,EAAcC,GAAd,EAAmB;SACvDA,IAAI6D,IAAJ,CAASZ,SAASa,QAAT,EAAT,CAAP;CADF;;;AAKAxD,MAAIgB,GAAJ,CAAQ,GAAR,EAAakC,MAAK1C,eAAlB,EAAmCkC,QAAM,OAAN,EAAeY,sBAAf,CAAnC,EAA2E,UAAC7D,GAAD,EAAMC,GAAN,EAAc;MACnFyD,MAAM/C,aAAWC,UAAX,GAAsBZ,IAAI0D,GAAJ,CAAQC,OAAR,CAAgB,KAAhB,EAAsB,EAAtB,CAAhC;eACWD,GAAX,EAAgB,UAACxB,GAAD,EAAM8B,IAAN,EAAe;QACzB9B,GAAJ,EAAS;aACAjC,IAAIe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,KAAX,EAAkBgB,QAAlB,EAArB,CAAP;;;;QAIE,CAAC2B,uBAAuB7D,GAAvB,CAAD,IAAgCyD,MAAK3C,SAAzC,EAAoD;;YAC9CmD,uBAAuBjE,IAAIpB,OAAJ,CAAYC,IAAZ,CAAiBkE,UAAjB,CAA4BjD,GAA5B,CAAgC;iBAAKoE,EAAEC,IAAP;SAAhC,CAA3B;;eAEOH,KAAKI,MAAL,CAAY;iBAAKH,qBAAqBI,OAArB,CAA6BH,EAAEhF,EAA/B,MAAuC,CAAC,CAA7C;SAAZ,CAAP;;;;QAGE+B,IAAJ,CAAS+C,IAAT;GAZF;CAFF,EAkBA;;AClDA;AACA,IAAMM,MAAMC,YAAA,IAAwB,KAApC;AACA,IAAMC,eAAeF,QAAQ,YAA7B;;;AAGAG,QAAQtC,GAAR,iCAA0CmC,GAA1C;AACA,IAAI/D,MAAMC,SAAV;;;;;;;;;;;;;;;;;AAiBAD,IAAImB,GAAJ,CAAQ9C,QAAQ;QACR,0BADQ;UAEN,sBAFM;qBAGK,IAHL;UAIN;CAJF,CAAR;;;AAQA2B,IAAImB,GAAJ,CAAQgD,WAAWzD,IAAX,EAAR;AACAV,IAAImB,GAAJ,CAAQgD,WAAWC,UAAX,CAAsB;YAClB;CADJ,CAAR;;;AAKApE,IAAImB,GAAJ,CAAQkD,OAAO,KAAP,CAAR;;;AAGArE,IAAImB,GAAJ,CAAQ3B,kBAAR;;;AAGAQ,IAAImB,GAAJ,CAAQlB,QAAQqE,MAAR,CAAerB,KAAKsB,IAAL,CAAUC,SAAV,EAAsB,CAACP,YAAD,GAAgB,gBAAhB,GAAmC,SAAzD,CAAf,CAAR;;;AAGA,AACAjE,IAAImB,GAAJ,CAAQ+B,KAAR;;;AAGA,AACAlD,IAAImB,GAAJ,CAAQ,gBAAR,EAA0BsD,KAA1B;;;AAGA,AACAzE,IAAImB,GAAJ,CAAQ,MAAR,EAAgBuD,KAAhB;;;AAGA1E,IAAIgB,GAAJ,CAAQ,UAAR,EAAoB,UAACvB,GAAD,EAAMC,GAAN,EAAc;MAC1BnB,OAD0B,GACK7B,GADL,CAC1B6B,IAD0B;MACpB5B,UADoB,GACKD,GADL,CACpBC,OADoB;MACXgI,cADW,GACKjI,GADL,CACXiI,WADW;;MAE5BjE,IAAJ,CAAS,EAAEnC,aAAF,EAAQoG,2BAAR,EAAqBhI,mBAArB,EAA8BiI,UAAU,IAAI3H,IAAJ,EAAxC,EAAT;CAFF;;;AAMA,IAAI4H,aAAa7E,IAAI8E,MAAJ,CAAWC,OAAOC,KAAP,CAAaC,IAAxB,EAA8B,YAAW;UAChDrD,GAAR,oCAA6CiD,WAAWK,OAAX,GAAqBC,IAAlE;CADe,CAAjB"}